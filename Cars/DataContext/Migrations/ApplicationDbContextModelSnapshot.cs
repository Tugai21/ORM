// <auto-generated />
using DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cars.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Peugeot"
                        });
                });

            modelBuilder.Entity("Cars.Models.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CylinderCount")
                        .HasColumnType("int");

                    b.Property<int?>("FuelId")
                        .HasColumnType("int");

                    b.Property<double>("HorsePower")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Torque")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FuelId");

                    b.ToTable("Engines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CylinderCount = 6,
                            FuelId = 1,
                            HorsePower = 431.0,
                            Name = "3.0",
                            Torque = 850.0
                        },
                        new
                        {
                            Id = 2,
                            CylinderCount = 4,
                            FuelId = 2,
                            HorsePower = 163.0,
                            Name = "2.0 TDI ultra",
                            Torque = 380.0
                        },
                        new
                        {
                            Id = 3,
                            CylinderCount = 4,
                            FuelId = 2,
                            HorsePower = 150.0,
                            Name = "2.0 BlueHDi",
                            Torque = 370.0
                        });
                });

            modelBuilder.Entity("Cars.Models.Fuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerLeter")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Fuels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gasoline",
                            PricePerLeter = 1.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Diesel",
                            PricePerLeter = 1.0
                        });
                });

            modelBuilder.Entity("Cars.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<double>("Consumption")
                        .HasColumnType("float");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            Consumption = 8.8000000000000007,
                            Height = 1.5,
                            Length = 4.5,
                            Name = "M3",
                            Width = 2.0,
                            Year = 2014
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            Consumption = 4.2000000000000002,
                            Height = 1.3999999999999999,
                            Length = 4.2999999999999998,
                            Name = "A4",
                            Width = 1.8999999999999999,
                            Year = 2014
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            Consumption = 4.0,
                            Height = 1.6000000000000001,
                            Length = 4.7000000000000002,
                            Name = "508",
                            Width = 2.1000000000000001,
                            Year = 2014
                        });
                });

            modelBuilder.Entity("Cars.Models.ModelEngine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EngineId");

                    b.HasIndex("ModelId");

                    b.ToTable("ModelEngines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EngineId = 1,
                            ModelId = 1,
                            Name = "M3 3.0"
                        },
                        new
                        {
                            Id = 2,
                            EngineId = 2,
                            ModelId = 2,
                            Name = "A4 2.0 TDI ultra"
                        },
                        new
                        {
                            Id = 3,
                            EngineId = 3,
                            ModelId = 3,
                            Name = "508 2.0 BlueHDi"
                        });
                });

            modelBuilder.Entity("Cars.Models.Engine", b =>
                {
                    b.HasOne("Cars.Models.Fuel", "Fuel")
                        .WithMany()
                        .HasForeignKey("FuelId");

                    b.Navigation("Fuel");
                });

            modelBuilder.Entity("Cars.Models.Model", b =>
                {
                    b.HasOne("Cars.Models.Car", "Car")
                        .WithMany("Models")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("Cars.Models.ModelEngine", b =>
                {
                    b.HasOne("Cars.Models.Engine", null)
                        .WithMany("ModelEngines")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cars.Models.Model", null)
                        .WithMany("ModelEngines")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cars.Models.Car", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Cars.Models.Engine", b =>
                {
                    b.Navigation("ModelEngines");
                });

            modelBuilder.Entity("Cars.Models.Model", b =>
                {
                    b.Navigation("ModelEngines");
                });
#pragma warning restore 612, 618
        }
    }
}
